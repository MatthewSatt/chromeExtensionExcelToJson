/* popup.css */
:root {
    --primary-color: #4285f4;
    --primary-hover: #1a73e8;
    --accent-color: #fbbc04;
    --text-primary: #202124;
    --text-secondary: #5f6368;
    --border-color: #dadce0;
    --bg-color: #ffffff;
    --bg-secondary: #f8f9fa;
    --bg-hover: #f1f3f4;
    --success-color: #0f9d58;
    --error-color: #ea4335;
    --shadow-sm: 0 1px 3px rgba(60, 64, 67, 0.12);
    --shadow-md: 0 2px 6px rgba(60, 64, 67, 0.15);
    --transition: all 0.2s ease;
}

body {
    font-family: 'Google Sans', 'Roboto', 'Segoe UI', Arial, sans-serif;
    color: var(--text-primary);
    background-color: var(--bg-color);
    margin: 0;
    padding: 20px;
    width: 360px;
    font-size: 14px;
    line-height: 1.5;
    overflow-x: hidden;
}

h1 {
    font-size: 20px;
    font-weight: 500;
    color: var(--primary-color);
    margin: 0 0 20px 0;
    padding-bottom: 12px;
    border-bottom: 1px solid var(--border-color);
    display: flex;
    align-items: center;
}

h1 svg {
    margin-right: 10px;
    color: var(--primary-color);
}

.input-group {
    margin-bottom: 20px;
}

.input-label {
    display: block;
    margin-bottom: 6px;
    font-weight: 500;
    color: var(--text-secondary);
}

.file-input-wrapper {
    position: relative;
    height: 44px;
    margin-bottom: 12px;
}

#fileInput {
    width: 0.1px;
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;
}

.file-input-label {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    background-color: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    cursor: pointer;
    transition: var(--transition);
    font-weight: 500;
    box-shadow: var(--shadow-sm);
}

.file-input-label:hover {
    background-color: var(--bg-hover);
    box-shadow: var(--shadow-md);
    border-color: var(--primary-color);
}

.file-input-label:active {
    transform: translateY(1px);
}

.file-input-label svg {
    margin-right: 8px;
}

#fileName {
    margin-top: 8px;
    font-size: 13px;
    color: var(--text-secondary);
    word-break: break-all;
    min-height: 20px;
    background-color: var(--bg-secondary);
    padding: 6px 10px;
    border-radius: 4px;
    border-left: 3px solid var(--accent-color);
    display: none;
}

#fileName:not(:empty) {
    display: block;
}

select {
    width: 100%;
    padding: 10px 12px;
    border: 1px solid var(--border-color);
    border-radius: 6px;
    background-color: white;
    appearance: none;
    background-image: url("data:image/svg+xml;utf8,<svg fill='%235f6368' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>");
    background-repeat: no-repeat;
    background-position: right 12px center;
    background-size: 16px;
    transition: var(--transition);
    box-shadow: var(--shadow-sm);
}

select:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(66, 133, 244, 0.2);
}

select:hover {
    border-color: var(--primary-hover);
}

.button-group {
    display: flex;
    justify-content: flex-end;
    margin-top: 24px;
    gap: 12px;
}

button {
    padding: 10px 18px;
    border: none;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: var(--transition);
    font-size: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: var(--shadow-sm);
}

button svg {
    margin-right: 6px;
}

.btn-primary {
    background-color: var(--primary-color);
    color: white;
}

.btn-primary:hover {
    background-color: var(--primary-hover);
    box-shadow: var(--shadow-md);
    transform: translateY(-1px);
}

.btn-primary:active {
    transform: translateY(1px);
}

.btn-secondary {
    background-color: var(--bg-secondary);
    color: var(--primary-color);
    border: 1px solid var(--border-color);
}

.btn-secondary:hover {
    background-color: var(--bg-hover);
    box-shadow: var(--shadow-md);
    transform: translateY(-1px);
}

.btn-secondary:active {
    transform: translateY(1px);
}

.options-section {
    margin-top: 20px;
    padding: 16px;
    background-color: var(--bg-secondary);
    border-radius: 8px;
    border: 1px solid var(--border-color);
}

.option-title {
    font-weight: 500;
    margin-bottom: 12px;
    color: var(--text-secondary);
    display: flex;
    align-items: center;
}

.option-title svg {
    margin-right: 8px;
}

/* Toggle Switch Styling */
.checkbox-group {
    display: flex;
    align-items: center;
    margin-bottom: 12px;
    padding: 2px 0;
  }

  .checkbox-group:last-child {
    margin-bottom: 0;
  }

  /* Hide the default checkbox */
  .checkbox-group input[type="checkbox"] {
    height: 0;
    width: 0;
    opacity: 0;
    position: absolute;
  }

  /* The toggle switch container */
  .checkbox-group label {
    position: relative;
    display: flex;
    align-items: center;
    cursor: pointer;
    padding-left: 52px; /* Space for the toggle */
    font-size: 14px;
    color: #334155;
    user-select: none;
  }

  /* The toggle track */
  .checkbox-group label:before {
    content: "";
    position: absolute;
    left: 0;
    width: 42px;
    height: 22px;
    border-radius: 11px;
    background-color: #e2e8f0;
    transition: background-color 0.3s ease;
  }

  /* The toggle knob */
  .checkbox-group label:after {
    content: "";
    position: absolute;
    left: 3px;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background-color: white;
    transition: left 0.3s ease, transform 0.3s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  /* Change the toggle track color when checked */
  .checkbox-group input[type="checkbox"]:checked ~ label:before {
    background-color: #2563eb;
  }

  /* Move the toggle knob when checked */
  .checkbox-group input[type="checkbox"]:checked ~ label:after {
    left: 23px;
  }

  /* Hover state */
  .checkbox-group:hover label:before {
    background-color: #cbd5e1;
  }

  .checkbox-group input[type="checkbox"]:checked:hover ~ label:before {
    background-color: #1d4ed8;
  }

  /* Focus state for accessibility */
  .checkbox-group input[type="checkbox"]:focus ~ label:before {
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.3);
  }

  /* Add a subtle animation to the toggle */
  .checkbox-group input[type="checkbox"]:checked ~ label:after {
    transform: translateX(0) scale(1.05);
  }

  /* Disabled state */
  .checkbox-group input[type="checkbox"]:disabled ~ label {
    opacity: 0.6;
    cursor: not-allowed;
  }

.status-message {
    margin-top: 16px;
    padding: 12px 16px;
    border-radius: 6px;
    font-size: 13px;
    display: none;
    animation: fadeIn 0.3s ease-in-out;
    box-shadow: var(--shadow-sm);
    position: relative;
    padding-left: 36px;
}

.status-message::before {
    content: '';
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    width: 16px;
    height: 16px;
    background-size: contain;
    background-repeat: no-repeat;
}

.status-success {
    background-color: rgba(15, 157, 88, 0.1);
    color: var(--success-color);
    border: 1px solid rgba(15, 157, 88, 0.2);
}

.status-success::before {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%230f9d58' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M22 11.08V12a10 10 0 1 1-5.93-9.14'></path><polyline points='22 4 12 14.01 9 11.01'></polyline></svg>");
}

.status-error {
    background-color: rgba(234, 67, 53, 0.1);
    color: var(--error-color);
    border: 1px solid rgba(234, 67, 53, 0.2);
}

.status-error::before {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23ea4335' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><circle cx='12' cy='12' r='10'></circle><line x1='12' y1='8' x2='12' y2='12'></line><line x1='12' y1='16' x2='12.01' y2='16'></line></svg>");
}

#resultsContainer {
    margin-top: 20px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    max-height: 300px;
    overflow: auto;
    background-color: var(--bg-secondary);
    box-shadow: var(--shadow-sm);
    transition: var(--transition);
    animation: slideDown 0.3s ease-out;
}

.results-header {
    padding: 12px 16px;
    background-color: #f1f3f4;
    border-bottom: 1px solid var(--border-color);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.results-header h3 {
    margin: 0;
    font-size: 14px;
    font-weight: 500;
    color: var(--text-secondary);
    display: flex;
    align-items: center;
}

.results-header h3 svg {
    margin-right: 8px;
}

.json-output {
    margin: 0;
    padding: 16px;
    font-family: 'Fira Code', 'Consolas', 'Monaco', monospace;
    font-size: 12px;
    white-space: pre-wrap;
    word-break: break-word;
    line-height: 1.6;
    overflow: auto;
    color: #333;
}

.json-key {
    color: #0b5394;
}

.json-string {
    color: #38761d;
}

.json-number {
    color: #990000;
}

.json-boolean {
    color: #ff9900;
}

.json-null {
    color: #7f7f7f;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes slideDown {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Copy button for JSON output */
.copy-btn {
    background-color: transparent;
    border: none;
    color: var(--text-secondary);
    padding: 4px 8px;
    cursor: pointer;
    display: flex;
    align-items: center;
    font-size: 12px;
    border-radius: 4px;
    box-shadow: none;
}

.copy-btn:hover {
    background-color: rgba(0, 0, 0, 0.05);
    color: var(--primary-color);
}

.copy-btn svg {
    margin-right: 4px;
}

/* Loading spinner */
.spinner {
    display: none;
    width: 24px;
    height: 24px;
    border: 3px solid rgba(66, 133, 244, 0.2);
    border-radius: 50%;
    border-top-color: var(--primary-color);
    animation: spin 1s ease-in-out infinite;
    margin: 0 auto;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}
